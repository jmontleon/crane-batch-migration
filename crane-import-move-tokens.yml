- name: Find dockercfgs
  find:
    path: "{{ playbook_dir }}/output/{{ item }}"
    recurse: true
    patterns: 'Secret.*dockercfg.*yaml'
    use_regex: true
  register: dockercfgs

- name: Delete dockercfgs
  file:
    state: absent
    path: "{{ dockercfg.path }}"
  with_items: "{{ dockercfgs.files }}"
  loop_control:
    loop_var: "dockercfg"
    label: "{{ dockercfg.path }}"

- name: Find Remaining tokens
  find:
    path: "{{ playbook_dir }}/output/{{ item }}"
    recurse: true
    patterns: 'Secret.*-token-.*yaml'
    use_regex: true
  register: tokens

- name: Ensure token dir exists
  file:
    state: directory
    path: "{{ playbook_dir }}/output/{{ item }}-tokens"

- name: Move tokens
  shell: mv "{{ token.path }}" "{{ playbook_dir }}/output/{{ item }}-tokens"
  with_items: "{{ tokens.files }}"
  loop_control:
    loop_var: "token"
    label: "{{ token.path }}"

- name: Find dockercfg tokens
  find:
    path: "{{ playbook_dir }}/output/{{ item }}-tokens"
    recurse: true
    contains: '^.*kubernetes.io/created-by: openshift.io/create-dockercfg-secrets$'
  register: dockercfg_tokens

- name: Delete dockercfg tokens
  file:
    state: absent
    path: "{{ dockercfg_token.path }}"
  with_items: "{{ dockercfg_tokens.files }}"
  loop_control:
    loop_var: "dockercfg_token"
    label: "{{ dockercfg_token.path }}"
