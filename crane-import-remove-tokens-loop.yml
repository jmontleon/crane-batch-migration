- name: read yaml
  set_fact:
    sa_yaml: "{{ lookup('file', sa.path) | from_yaml }}"

- name: Get provisioned sa
  k8s_info:
    api_version: v1
    kind: ServiceAccount
    name: "{{ sa_yaml.metadata.name }}"
    namespace: "{{ namespace }}"
    kubeconfig: "{{ dst_kubeconfig }}"
  register: newclustersa

- name: Declare unwanted_tokens
  set_fact:
    unwanted_tokens: []

- name: Find unwanted tokens
  set_fact:
    unwanted_tokens: "{{ unwanted_tokens + new_unwanted_token }}"
  with_items: "{{ newclustersa.resources[0].secrets }}"
  loop_control:
    loop_var: unwanted_token
    index_var: idx
  vars:
    new_unwanted_token:
    - {'name': '{{ unwanted_token.name }}', 'index': '{{idx}}' }
  when:
  - "not('-dockercfg-' in unwanted_token.name )"
  - "not(unwanted_token.name in (sa_yaml.secrets | map(attribute='name') | list))"

- name: Remove token generated by new cluster
  shell: |
    oc patch sa -n {{ namespace }} {{ sa_yaml.metadata.name }} --type json -p '[{ "op": "remove", "path": "/secrets/{{tkn.index}}" }]'
    oc delete secret -n {{ namespace }} {{ tkn.name }}
  environment:
    KUBECONFIG: "{{ dst_kubeconfig }}"
  with_items: "{{ unwanted_tokens }}"
  loop_control:
    loop_var: tkn
